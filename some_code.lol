HAI 1.3
	OBTW
		CODE: THE CODES BETWEEN ARE IGNORED, AKA MULTILINE COMMENT
	TLDR
	BTW CODE: BTW IS FOR ONE LINE COMMENT

	OBTW
		EACH PROGRAM STARTS WITH A HAI <LOLCODE VERSION>, AND ENDS WITH A KTHXBYE.
	TLDR

	BTW IF YOU CAN'T RUN THIS FILE, YOU CAN'T RUN THE OTHERS
	VISIBLE "KITTEH" BTW PRINTS A STRING CALLED KITTEH

	OBTW
		COMMENT: GET INPUT
		CODE: GIMMEH <VARIABLE>
	TLDR
	I HAS A VAR ITZ A YARN BTW DECLARE A VARIABLE FOR LATER USE
	VISIBLE "TYPE SOMETHING AN ENTER"
	GIMMEH VAR BTW GET INPUT (STRING) INTO VARIABLE
	VISIBLE VAR

	OBTW
		COMMENT: DATA TYPES
		COMMENT: TYPES AVAILABLE: NOOB (UNTYPE), TROOF (BOOLEAN), NUMBR (INTEGER), NUMBAR (FLOAT), YARN (STRING)

		CODE: I HAS A <VARIABLE> ITZ A <DATA TYPE>
		COMMENT: CREATES A VARIABLE OF TYPE DATA TYPE

		CODE: I HAS A <VARIABLE> ITZ <EXPRESSION>
		COMMENT: CREATES A VARIABLE AND ASSIGN DATA TO IT

		CODE: <VARIABLE> R <EXPRESSION>
		COMMENT: ASSIGN DATA TO ALREADY CREATED VARIABLE

		COMMENT: SUBTLE DIFFERENCE - THE FIRST CREATES A VARIABLE WITHOUT ASSINING DATA TO VARIABLE
	TLDR

	I HAS A VAR3 ITZ A NUMBR
	VISIBLE VAR3

	I HAS A VAR4 ITZ 13
	VISIBLE VAR4

	I HAS A VAR5 ITZ "12.0"
	VISIBLE VAR5

	I HAS A VAR2 ITZ A NUMBR
	VAR2 R 13
	VISIBLE VAR2

	I HAS A VAR6 ITZ A BUKKIT BTW DECLARING AN ARRAY
	VAR6 HAS A VAR7 ITZ "DOGE" BTW VAR7 IS A STRING VARIABLE THAT IS INSERTED INTO ARRAY VAR6
	VISIBLE VAR6'Z VAR7 BTW GET THE ELEMENT OF ARRAY

	OBTW
		COMMENT: TYPE CASTINGS (CHANGE TYPES)

		COMMENT: CHANGE EXPRESSION INTO ANOTHER TYPE
		CODE: MAEK <EXPRESSION> A <TYPE>

		COMMENT: CHANGE VARIABLE INTO ANOTHER TYPE
		CODE: <VARIABLE> IS NOW A <TYPE>

		COMMENT: CHANGE VARIABLE CONTENT INTO IDENTIFIER (VARIABLE)
		CODE: SRS <VARIABLE>
	TLDR

	VISIBLE MAEK "10.00" A NUMBR

	I HAS A VAR8 ITZ "10"
	VAR8 IS NOW A NUMBAR

	I HAS A VAR9 ITZ "TEST"
	I HAS A TEST ITZ 6
	VISIBLE SRS VAR9
	BTW OUTPUT: 6

	OBTW
		CODE: BOTH SAEM <FIRST EXPRESSION> <SECOND EXPRESSION>
		COMMENT: RETURNS WIN IF FIRST EXPRESSION IS THE SAME AS SECOND EXPRESSION, FAIL OTHERWISE
	TLDR
	VISIBLE BOTH SAEM 7 7

	OBTW
		CODE: <EXPRESSION>, O RLY?
				YA RLY
					<CODE>
				NO WAI
					<CODE>
				OIC
		COMMENT: O RLY? STARTS THE IF-ELSE, OIC ENDS THE IF-ELSE
				YA RLY IS THE IF, NO WAI IS THE ELSE
				OIC ENDS THE IF STATEMENT
	TLDR
	I HAS A VAR10 ITZ 7
	BOTH SAEM VAR10 7, O RLY?
		YA RLY
			VISIBLE "TRUE"
		NO WAI
			VISIBLE "FALSE"
	OIC

	OBTW
		CODE: BOTH SAEM <FIRST EXPRESSION> SMALLR OF <FIRST EXPRESSION> AN <SECOND EXPRESSION>.
		COMMENT: COMPARES IF THE FIRST EXPRESSION IS LESS THAN OR EQUALS TO THE SECOND EXPRESSION.

		CODE: BOTH SAEM <FIRST EXPRESSION> BIGGR OF <FIRST EXPRESSION> AN <SECOND EXPRESSION>.
		COMMENT: COMPARES IF THE FIRST EXPRESSION IS MORE THAN OR EQUALS TO THE SECOND EXPRESSION.
	TLDR
	I HAS A VAR11 ITZ 7
	BOTH SAEM VAR11 SMALLR OF VAR11 AN 8, O RLY?
		YA RLY
			VISIBLE "TRUE"
		NO WAI
			VISIBLE "FALSE"
	OIC

	OBTW
		CODE: DIFFRINT <FIRST EXPRESSION> BIGGR OF <FIRST EXPRESSION> AN <SECOND EXPRESSION>.
		COMMENT: COMPARES IF THE FIRST EXPRESSION IS LESS THAN THE SECOND EXPRESSION.

		CODE: DIFFRINT <FIRST EXPRESSION> SMALLR OF <FIRST EXPRESSION> AN <SECOND EXPRESSION>.
		COMMENT: COMPARES IF THE FIRST EXPRESSION IS MORE THAN THE SECOND EXPRESSION.

		COMMENT: CODE IS OPPOSITE OF THE CODE OF THE LESS THAN OR EQUALS AND MORE THAN OR EQUALS.
	TLDR
	I HAS A VAR12 ITZ 7
	DIFFRINT VAR12 SMALLR OF VAR12 AN 8, O RLY?
		YA RLY
			VISIBLE "TRUE"
		NO WAI
			VISIBLE "FALSE"
	OIC

	OBTW
		COMMENT: THIS IS FOR-LOOP
		CODE: IM IN YR <LOOP NAME> <UPPIN/NERFIN> YR <VARIABLE> TIL <EXPRESSION>
		EXAMPLE: IM IN YR LOOP UPPIN YR VAR13 TIL BOTH SAEM VAR13 4 
		COMMENT: THE VAR13 STARTS AT 0, NO MATTER WHAT THE PREVIOUS VALUE OF VAR13 IS
	TLDR
	IM IN YR LOOP UPPIN YR VAR13 TIL BOTH SAEM VAR13 4 
		VISIBLE VAR13
	IM OUTTA YR LOOP
	BTW OUTPUT: 0 1 2 3

	IM IN YR LOOP UPPIN YR VAR13 TIL BOTH SAEM VAR13 4
	    VISIBLE SUM OF VAR13 AN 3
	IM OUTTA YR LOOP
	BTW OUTPUT: 3 4 5 6

	OBTW
		COMMENT: THIS IS WHILE-LOOP
		COMMENT: LOOP VAR14 WHILE VAR14 IS NOT 5, INCREASING BY 1 PER LOOP
		CODE: IM IN YR <LOOP NAME> <UPPIN/NERFIN> YR <VARIABLE> TIL <EXPRESSION>
		EXAMPLE: IM IN YR LOOP UPPIN YR VAR14 WIL DIFFRINT VAR14 5
	TLDR
	I HAS A VAR14 ITZ 0
	IM IN YR LOOP UPPIN YR VAR14 WILE DIFFRINT VAR14 5
		VISIBLE VAR14
	IM OUTTA YR LOOP
	BTW OUTPUT: 0 1 2 3 4

	OBTW
		COMMENT: MATH CALCULATIONS
		CODE: SUM OF <FIRST EXPRESSION> AN <SECOND EXPRESSION
		EXAMPLE: SUM OF 4 AN 2
		OUTPUT: 6

		CODE: DIFF OF <FIRST EXPRESSION> AN <SECOND EXPRESSION
		EXAMPLE: DIFF OF 4 AN 2
		OUTPUT: 2

		CODE: PRODUKT OF <FIRST EXPRESSION> AN <SECOND EXPRESSION
		EXAMPLE: PRODUKT OF 4 AN 2
		OUTPUT: 8

		CODE: QUOSHUNT OF <FIRST EXPRESSION> AN <SECOND EXPRESSION
		EXAMPLE: QUOSHUNT OF 4 AN 2
		OUTPUT: 2

		CODE: MOD OF <FIRST EXPRESSION> AN <SECOND EXPRESSION
		EXAMPLE: MOD OF 4 AN 2
		OUTPUT: 0
	TLDR
	I HAS A VAR15 ITZ 4
	I HAS A VAR16 ITZ 2

	VISIBLE SUM OF VAR15 AN VAR16
	BTW OUTPUT: 6
	VISIBLE DIFF OF VAR15 AN VAR16
	BTW OUTPUT: 2
	VISIBLE PRODUKT OF VAR15 AN VAR16
	BTW OUTPUT: 8
	VISIBLE QUOSHUNT OF VAR15 AN VAR16
	BTW OUTPUT: 2
	VISIBLE MOD OF VAR15 AN VAR16
	BTW OUTPUT: 0

	OBTW
		CODE: SMOOSH <STRING> AN <STRING> AN <STRING> ... MKAY
		Example: SMOOSH "HOOMAN " AN "BRING " AN "ME " AN "FOODZ" MKAY
		OUTPUT: HOOMAN BRING ME FOODZ
	TLDR
	VISIBLE SMOOSH "HOOMAN " AN "BRING " AN "ME " AN "FOODZ" MKAY

	OBTW
		COMMENT: THIS IS SWITCH STATEMENT
		CODE: [expression], WTF?
				OMG [value]
					[code]
				OMG [value]
					[code]
				OMGWTF
					[code]
				OIC
	TLDR
	I HAS A COLOR ITZ "RED"
	COLOR, WTF?
		OMG "BLUE"
			VISIBLE "IT IS BLUE"
		OMG "RED"
			VISIBLE "IT IS RED"
		OMGWTF
			VISIBLE "IT IS NOT A COLOR"
		OIC

	OBTW
		COMMENT: FUNCTIONS
		COMMENT: TO DECLARE A FUNCTION
		CODE: HOW IZ I <FUNCTION NAME> YR <FIRST ARGUMENT> AN YR <SECOND ARGUMENT>...
				<FUNCTION CONTENT>
				IF U SAY SO

		COMMENT: TO CALL A FUNCTION
		CODE: I IZ <FUNCTION NAME> YR <FIRST ARGUMENT> AN YR <SECOND ARGUMENT>... MKAY

		COMMENT: TO RETURN AN EXPRESSION
		CODE: FOUND YR <EXPRESSION>

		COMMENT: TO RETURN WITHOUT VALUE
		CODE: GTFO
	TLDR
	HOW IZ I MULTIPLY YR FIRSTOPERANT AN YR SECONDOPERANT
		FOUND YR PRODUKT OF FIRSTOPERANT AN SECONDOPERANT
	IF U SAY SO
	VISIBLE I IZ MULTIPLY YR 2 AN YR 3 MKAY BTW OUTPUT: 6

	OBTW
		COMMENT: FUNCTIONS FOR ARRAY
		CODE: HOW IZ <ARRAY> <FUNCTION NAME> YR <FIRST ARGUMENT> AN YR <SECOND ARGUMENT>...
				<FUNCTION CONTENT>
				IF U SAY SO

		COMMENT: CALLING ARRAY FUNCTION
		CODE: <ARRAY> IZ <FUNCTION NAME> YR <FIRST ARGUMENT> AN YR <SECOND ARGUMENT>... MKAY
		OR
		CODE: I IZ <ARRAY>'Z <FUNCTION NAME> YR <FIRST ARGUMENT> AN YR <SECOND ARGUMENT>... MKAY
	TLDR
	I HAS A STRINGARRAY ITZ A BUKKIT
	STRINGARRAY HAS A VAR17 ITZ "OBJECT1"
	STRINGARRAY HAS A VAR18 ITZ "OBJECT2"

	// TODO
	HOW IZ STRINGARRAY ACCESS YR VARIABLE
		FOUND YR STRINGARRAY'Z SRS VARIABLE
	IF U SAY SO

    I HAS A STRING ITZ "VAR17"
	VISIBLE STRINGARRAY IZ ACCESS YR STRING MKAY
KTHXBYE